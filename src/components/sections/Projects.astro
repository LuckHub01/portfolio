---
import { getProjects, getTechIcon } from '../../utils/data';

const projects = getProjects();
const projectTypes = [...new Set(projects.map(project => project.type))];
---

<section id="projects" class="py-20 bg-gray-50 dark:bg-gray-800">
  <div class="container mx-auto px-4 md:px-6">
    <h2 class="text-3xl font-bold text-center mb-4 text-gray-900 dark:text-white">
      Mes <span class="text-primary-600 dark:text-primary-400">projets</span>
    </h2>
    
    <p class="text-center text-gray-600 dark:text-gray-300 mb-10 max-w-2xl mx-auto">
      Découvrez une sélection de mes projets les plus significatifs dans les domaines de l'IA, du développement web et du traitement de données.
    </p>
    
    <!-- Project Filters -->
    <div class="flex justify-center flex-wrap gap-3 mb-10">
      <button 
        class="project-filter px-4 py-2 rounded-md bg-white dark:bg-gray-900 shadow-sm hover:shadow transition-all active"
        data-filter="all"
      >
        Tous
      </button>
      
      {projectTypes.map((type) => (
        <button 
          class="project-filter px-4 py-2 rounded-md bg-white dark:bg-gray-900 shadow-sm hover:shadow transition-all"
          data-filter={type}
        >
          {type}
        </button>
      ))}
    </div>
    
    <!-- Projects Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6" id="projects-grid">
      {projects.map((project) => (
        <div 
          class="project-card bg-white dark:bg-gray-900 rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-all" 
          data-type={project.type}
        >
          <div class="p-6">
            <div class="flex justify-between items-start mb-4">
              <h3 class="text-lg font-semibold text-gray-900 dark:text-white">
                {project.title}
              </h3>
              {project.type && (
                <span class="text-xs px-2 py-1 bg-primary-100 dark:bg-primary-900/30 text-primary-800 dark:text-primary-300 rounded">
                  {project.type}
                </span>
              )}
            </div>
            
            {project.organization && (
              <div class="mb-2 flex items-center gap-2 text-sm text-gray-600 dark:text-gray-400">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4" />
                </svg>
                <span>{project.organization}</span>
              </div>
            )}
            
            {project.period && (
              <div class="mb-3 flex items-center gap-2 text-sm text-gray-600 dark:text-gray-400">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                </svg>
                <span>{project.period}</span>
              </div>
            )}
            
            <p class="text-gray-700 dark:text-gray-300 mb-4">
              {project.description}
            </p>
            
            {project.role && (
              <div class="mb-4 flex items-center gap-2 text-sm text-gray-600 dark:text-gray-400">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                </svg>
                <span>{project.role}</span>
              </div>
            )}
            
            {project.achievement && (
              <div class="mb-4 flex items-center gap-2 text-accent-600 dark:text-accent-400 font-medium">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13 21l-2.286-6.857L5 12l5.714-2.143L13 3z" />
                </svg>
                <span>{project.achievement}</span>
              </div>
            )}
            
            <div class="flex flex-wrap gap-2 mt-4">
              {project.technologies && project.technologies.map((tech) => (
                <span class="inline-flex items-center gap-1 px-2 py-1 bg-gray-100 dark:bg-gray-800 text-gray-800 dark:text-gray-200 rounded text-xs">
                  <i class={`${getTechIcon(tech)} text-primary-500`}></i>
                  {tech}
                </span>
              ))}
            </div>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>

<script>
  // Project filtering functionality
  const filterButtons = document.querySelectorAll('.project-filter');
  const projectCards = document.querySelectorAll('.project-card');
  
  filterButtons.forEach(button => {
    button.addEventListener('click', () => {
      // Remove active class from all buttons
      filterButtons.forEach(btn => btn.classList.remove('active', 'bg-primary-500', 'text-white', 'dark:bg-primary-600'));
      
      // Add active class to clicked button
      button.classList.add('active', 'bg-primary-500', 'text-white', 'dark:bg-primary-600');
      
      const filter = button.getAttribute('data-filter');
      
      projectCards.forEach(card => {
        if (filter === 'all' || card.getAttribute('data-type') === filter) {
          card.style.display = 'block';
        } else {
          card.style.display = 'none';
        }
      });
    });
  });
  
  // Set "All" filter as active by default
  document.querySelector('.project-filter[data-filter="all"]')?.classList.add('bg-primary-500', 'text-white', 'dark:bg-primary-600');
</script>